N--{program,declaration,type,expression,number,type1,paran,sign,signed,expr,term,md,factor,arraydecl,cmpdstmt,stmt,simplestmt,assignstmt,iostmt,structstmt,ifstmt,whilestmt,condition,relation,identifier,letter,alphanumeric,noconst,nonZeroDigit,digit,integer,character}
E--{+,-,*,/,=,==,<,<=,>,>=,&&,||,!=,;,(,)," ",situation,other,parsing,leave,come,individual,decision,char,float,a,b,c,d,e,f,g,h,j,i,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,0,1,2,3,4,5,6,7,8,9}
S--program
program->declaration cmpdstmt
program->epsilon
declaration->type identifier ;
declaration->epsilon
type1->individual
type1->decision
type1->char
type1->float
type->type1
type->arraydecl
expression->paran expr )
paran->(
expression->digit
paran->epsilon
expression->identifier
expr->identifier = identifier sign identifier
expr->identifier = identifier relation identifier
sign->+
sign->-
sign->*
sign->/
factor->( expression )
factor->identifier
factor->digit
arraydecl->type1 identifier [ number ]
assignstmt->identifier = expression ;
iostmt->come identifier
iostmt->leave identifier
ifstmt->situation ( condition ) { stmt ; }
ifstmt->situation ( condition ) { stmt ; } other { stmt ; }
whilestmt->parsing ( condition ) { stmt ; }
condition->expression relation condition
relation-><
relation-><=
relation->>
relation->>=
relation->==
relation->!=
relation->&&
relation->||
stmt->simplestmt
stmt->structstmt
simplestmt->assignstmt
simplestmt->iostmt
structstmt->ifstmt
structstmt->whilestmt
cmpdstmt->stmt
cmpdstmt->stmt cmpdstmt
cmpdstmt->epsilon
identifier->letter alphanumeric
alphanumeric->epsilon
alphanumeric->letter
alphanumeric->digit
letter->a
letter->b
letter->c
digit->0
digit->nonZeroDigit
nonZeroDigit->1
nonZeroDigit->2
unsigned->nonZeroDigit
unsigned->digit unsigned
integer->- unsigned
integer->+ unsigned
integer->unsigned
number->0
number->signed
signed->+
signed->-
signed->epsilon
number->nonZeroDigit digit